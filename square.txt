		in
        push rax
		in
        push rbx
		in
        push rcx

        pop rax
        push 0
        je line

        call discr
        pop rdx
        push 0
        jb two
        pop rdx
        push 0
        je one
        jmp no
		hlt

:discr  pop rbx
        pop rbx
		mul
        pop rax
        pop rcx
		mul
        push 4
		mul
		sub
        push rdx
		ret

:one    pop rbx
        push -1
		mul
        push 2
        pop rax
		mul
		div
		out
		hlt

:two    pop rdx
		sqrt
        push rdx
        pop rbx
        push -1
		mul
        pop rdx
		add
        push 2
        pop rax
		mul
		div
		out
        pop rbx
        push -1
		mul
        pop rdx
		sub
        push 2
        pop rax
		mul
		div
		out
		hlt

:line   pop rbx
        push 0
        je check
        pop rcx
        push -1
		mul
        pop rbx
		div
		out
		hlt

:check  pop rcx
        push 0
        je inf
        jmp no

:no     push 78
		outc
        push 79
		outc
        push 95
		outc
        push 82
		outc
        push 10
		outc
		hlt

:inf    push 73
		outc
        push 78
		outc
        push 70
		outc
        push 95
		outc
        push 82
		outc
        push 10
		outc
		hlt